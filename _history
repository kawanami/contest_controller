{"entries":[{"timestamp":1731573441511,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"custom.ts","patch":[{"diffs":[[0," }\n\n"],[-1,"    /**\n     * 受信機にドローンが時計回りを行う命令を送信する．\n     * その時，角度を設定し送信を行う．\n     * @param value 時計回りを行う角度を設定する(degrees clockwise) value 1-360, eg: 90\n     */\n    //% block=\"時計まわり %value\"\n    //% group=\"基本\"\n    export function rotate_cw(value: number): void {\n        if (flying == 1 && command_enable == 1) {\n            radio.sendString(\"cw=\" + value)\n            flying = 1\n            command_enable = 0\n        }\n    }\n\n    /**\n     * 受信機にドローンが反時計回りを行う命令を送信する．\n     * その時，角度を設定し送信を行う．\n     * @param value 反時計回りを行う角度を設定する(degrees counterclockwise) value 1-360, eg: 90\n     */\n    //% block=\"反時計まわり %value\"\n    //% group=\"基本\"\n    export function rotate_ccw(value: number): void {\n        if (flying == 1 && command_enable == 1) {\n            radio.sendString(\"ccw=\" + value)\n            flying = 1\n            command_enable = 0\n        }\n    }\n\n"],[0,"    "]],"start1":1396,"start2":1396,"length1":844,"length2":8},{"diffs":[[0,"block=\"上"],[-1,"にいく"],[1,"がる"],[0," %value\""]],"start1":1534,"start2":1534,"length1":19,"length2":18},{"diffs":[[0,"k=\"下"],[-1,"にいく"],[1,"がる"],[0," %va"]],"start1":1920,"start2":1920,"length1":11,"length2":10},{"diffs":[[0,"信機にドローンが"],[-1,"後ろにすす"],[1,"前に進"],[0,"む命令を送信する"]],"start1":2185,"start2":2185,"length1":21,"length2":19},{"diffs":[[0,"m value "],[-1,"後ろにすす"],[1,"前に進"],[0,"む距離を設定する"]],"start1":2242,"start2":2242,"length1":21,"length2":19},{"diffs":[[0," block=\""],[-1,"後ろ"],[1,"前"],[0,"にすすむ %va"]],"start1":2302,"start2":2302,"length1":18,"length2":17},{"diffs":[[0,"unction "],[-1,"back"],[1,"forward"],[0,"(value: "]],"start1":2355,"start2":2355,"length1":20,"length2":23},{"diffs":[[0,"String(\""],[-1,"back"],[1,"forward"],[0,"=\" + val"]],"start1":2466,"start2":2466,"length1":20,"length2":23},{"diffs":[[0,"     * 受信機にドローンが"],[-1,"前に進む"],[1,"後ろにさがる"],[0,"命令を送信する．\n     * "]],"start1":2572,"start2":2572,"length1":36,"length2":38},{"diffs":[[0," * @param value "],[-1,"前に進む"],[1,"後ろにさがる"],[0,"距離を設定する（cm） valu"]],"start1":2631,"start2":2631,"length1":36,"length2":38},{"diffs":[[0,"\n    //% block=\""],[-1,"前にすすむ"],[1,"後ろにさがる"],[0," %value\"\n    //%"]],"start1":2693,"start2":2693,"length1":37,"length2":38},{"diffs":[[0,"export function "],[-1,"forward"],[1,"back"],[0,"(value: number):"]],"start1":2747,"start2":2747,"length1":39,"length2":36},{"diffs":[[0,"dio.sendString(\""],[-1,"forward"],[1,"back"],[0,"=\" + value)\n    "]],"start1":2855,"start2":2855,"length1":39,"length2":36},{"diffs":[[0,"\n    }\n\n"],[-1,"\n"],[0,"    /**\n"]],"start1":3732,"start2":3732,"length1":17,"length2":16},{"diffs":[[0,"    "],[-1," "],[0,"* "],[-1,"コントローラー内の変数を確認して離陸するか，着陸を行う．\n "],[1,"受信機にドローンが時計回りを行う命令を送信する．\n     * その時，角度を設定し送信を行う．\n     * @param value 時計回りを行う角度を設定する(degrees clockwise) value 1-360, eg: 90\n"],[0,"    "]],"start1":3749,"start2":3749,"length1":41,"length2":133},{"diffs":[[0,"ck=\""],[-1,"りりく/ちゃくりく"],[1,"時計まわり %value"],[0,"\"\n  "]],"start1":3897,"start2":3897,"length1":17,"length2":20},{"diffs":[[0,"ion "],[-1,"fly_or_land("],[1,"rotate_cw(value: number"],[0,"): v"]],"start1":3950,"start2":3950,"length1":20,"length2":31},{"diffs":[[0,"ying == "],[-1,"0"],[1,"1"],[0," && comm"]],"start1":4001,"start2":4001,"length1":17,"length2":17},{"diffs":[[0,"sendString(\""],[-1,"takeoff\""],[1,"cw=\" + value"],[0,")\n          "]],"start1":4055,"start2":4055,"length1":32,"length2":36},{"diffs":[[0,"       }"],[-1," else"],[1,"\n    }\n\n    /**\n     * 受信機にドローンが反時計回りを行う命令を送信する．\n     * その時，角度を設定し送信を行う．\n     * @param value 反時計回りを行う角度を設定する(degrees counterclockwise) value 1-360, eg: 90\n     */\n    //% block=\"反時計まわり %value\"\n    //% group=\"基本\"\n    export function rotate_ccw(value: number): void {\n       "],[0," if (fly"]],"start1":4136,"start2":4136,"length1":21,"length2":289},{"diffs":[[0,"dio.sendString(\""],[-1,"land\""],[1,"ccw=\" + value"],[0,")\n            fl"]],"start1":4474,"start2":4474,"length1":37,"length2":45},{"diffs":[[0,"       flying = "],[-1,"0"],[1,"1"],[0,"\n            com"]],"start1":4510,"start2":4510,"length1":33,"length2":33},{"diffs":[[0,"信機にドローンが"],[-1,"離陸"],[1,"飛行を開始"],[0,"する命令を送信す"]],"start1":4592,"start2":4592,"length1":18,"length2":21},{"diffs":[[0," block=\""],[-1,"離陸"],[1,"飛行を開始"],[0,"する\"\n    "]],"start1":4631,"start2":4631,"length1":18,"length2":21},{"diffs":[[0,"機にドローンが着"],[-1,"陸"],[1,"地を"],[0,"する命令を送信す"]],"start1":4871,"start2":4871,"length1":17,"length2":18},{"diffs":[[0,"k=\"着"],[-1,"陸する"],[1,"地をおこなう"],[0,"\"\n  "]],"start1":4911,"start2":4911,"length1":11,"length2":14},{"diffs":[[0,"    }\n\n "],[1,"   /**\n     * コントローラー内の変数を確認して飛行を開始するか，着地を行う．\n     */\n    //% block=\"りりく/ちゃくりく\"\n    //% group=\"基本\"\n    export function fly_or_land(): void {\n        if (flying == 0 && command_enable == 1) {\n            radio.sendString(\"takeoff\")\n            flying = 1\n            command_enable = 0\n        } else if (flying == 1 && command_enable == 1) {\n            radio.sendString(\"land\")\n            flying = 0\n            command_enable = 0\n        }\n    }"],[0,"\n\n    /*"]],"start1":5361,"start2":5361,"length1":16,"length2":464}]},{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"bles><block "],[1,"type=\"device_forever\" x=\"296\" y=\"-5\"><statement name=\"HANDLER\"><block type=\"Tello_Setorder\"></block></statement></block><block "],[0,"type=\"pxt-on"]],"start1":73,"start2":73,"length1":24,"length2":151},{"diffs":[[0," x=\""],[-1,"0"],[1,"41"],[0,"\" y=\""],[1,"5"],[0,"0\"><"]],"start1":231,"start2":231,"length1":14,"length2":16},{"diffs":[[0,"ck><"],[-1,"block type=\"device_forever\" x=\"291\" y=\"-3\"><statement name=\"HANDLER\"><block type=\"Tello_Setorder\"></block></statement></block><"],[0,"/xml"]],"start1":423,"start2":423,"length1":135,"length2":8}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"t"],[1,"block"],[0,"sprj\"\n}\n"]],"start1":483,"start2":483,"length1":17,"length2":21}]}]},{"timestamp":1731574036445,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"custom.ts","patch":[{"diffs":[[0,"信機にドローンが"],[-1,"反"],[0,"時計回りを行う命"]],"start1":1416,"start2":1416,"length1":17,"length2":16},{"diffs":[[0,"m value "],[-1,"反"],[0,"時計回りを行う角"]],"start1":1476,"start2":1476,"length1":17,"length2":16},{"diffs":[[0,"ees "],[-1,"counter"],[0,"cloc"]],"start1":1503,"start2":1503,"length1":15,"length2":8},{"diffs":[[0,"ck=\""],[-1,"反"],[0,"時計まわ"]],"start1":1557,"start2":1557,"length1":9,"length2":8},{"diffs":[[0," rotate_"],[-1,"c"],[0,"cw(value"]],"start1":1613,"start2":1613,"length1":17,"length2":16},{"diffs":[[0,"String(\""],[-1,"c"],[0,"cw=\" + v"]],"start1":1719,"start2":1719,"length1":17,"length2":16},{"diffs":[[0,"     * 受信機にドローンが"],[1,"反"],[0,"時計回りを行う命令を送信する．\n"]],"start1":1820,"start2":1820,"length1":32,"length2":33},{"diffs":[[0," * @param value "],[1,"反"],[0,"時計回りを行う角度を設定する(d"]],"start1":1881,"start2":1881,"length1":32,"length2":33},{"diffs":[[0,"角度を設定する(degrees "],[1,"counter"],[0,"clockwise) value"]],"start1":1905,"start2":1905,"length1":32,"length2":39},{"diffs":[[0,"\n    //% block=\""],[1,"反"],[0,"時計まわり %value\"\n  "]],"start1":1966,"start2":1966,"length1":32,"length2":33},{"diffs":[[0,"function rotate_"],[1,"c"],[0,"cw(value: number"]],"start1":2027,"start2":2027,"length1":32,"length2":33},{"diffs":[[0,"dio.sendString(\""],[1,"c"],[0,"cw=\" + value)\n  "]],"start1":2134,"start2":2134,"length1":32,"length2":33},{"diffs":[[0,"       }\n    }\n\n"],[-1,"\n"],[0,"    /**\n     * 受"]],"start1":2220,"start2":2220,"length1":33,"length2":32},{"diffs":[[0,"ローンが"],[-1,"左に進"],[1,"後ろにすす"],[0,"む命令を"]],"start1":3027,"start2":3027,"length1":11,"length2":13},{"diffs":[[0,"m value "],[-1,"左"],[1,"後ろ"],[0,"にすすむ距離を設"]],"start1":3082,"start2":3082,"length1":17,"length2":18},{"diffs":[[0," block=\""],[-1,"左"],[1,"後ろ"],[0,"にすすむ %va"]],"start1":3144,"start2":3144,"length1":17,"length2":18},{"diffs":[[0,"unction "],[-1,"left"],[1,"back"],[0,"(value: "]],"start1":3198,"start2":3198,"length1":20,"length2":20},{"diffs":[[0,"String(\""],[-1,"left"],[1,"back"],[0,"=\" + val"]],"start1":3306,"start2":3306,"length1":20,"length2":20},{"diffs":[[0,"信機にドローンが"],[-1,"右"],[1,"前"],[0,"に進む命令を送信"]],"start1":3417,"start2":3417,"length1":17,"length2":17},{"diffs":[[0,"m value "],[-1,"右にすす"],[1,"前に進"],[0,"む距離を設定する"]],"start1":3474,"start2":3474,"length1":20,"length2":19},{"diffs":[[0," block=\""],[-1,"右"],[1,"前"],[0,"にすすむ %va"]],"start1":3534,"start2":3534,"length1":17,"length2":17},{"diffs":[[0,"unction "],[-1,"right"],[1,"forward"],[0,"(value: "]],"start1":3587,"start2":3587,"length1":21,"length2":23},{"diffs":[[0,"String(\""],[-1,"right"],[1,"forward"],[0,"=\" + val"]],"start1":3698,"start2":3698,"length1":21,"length2":23},{"diffs":[[0,"     * 受信機にドローンが"],[-1,"後ろにすす"],[1,"左に進"],[0,"む命令を送信する．\n     *"]],"start1":3804,"start2":3804,"length1":37,"length2":35},{"diffs":[[0," * @param value "],[-1,"後ろ"],[1,"左"],[0,"にすすむ距離を設定する（cm） "]],"start1":3861,"start2":3861,"length1":34,"length2":33},{"diffs":[[0,"\n    //% block=\""],[-1,"後ろ"],[1,"左"],[0,"にすすむ %value\"\n   "]],"start1":3922,"start2":3922,"length1":34,"length2":33},{"diffs":[[0,"export function "],[-1,"back"],[1,"left"],[0,"(value: number):"]],"start1":3975,"start2":3975,"length1":36,"length2":36},{"diffs":[[0,"dio.sendString(\""],[-1,"back"],[1,"left"],[0,"=\" + value)\n    "]],"start1":4083,"start2":4083,"length1":36,"length2":36},{"diffs":[[0,"     * 受信機にドローンが"],[-1,"前"],[1,"右"],[0,"に進む命令を送信する．\n    "]],"start1":4194,"start2":4194,"length1":33,"length2":33},{"diffs":[[0," * @param value "],[-1,"前に進"],[1,"右にすす"],[0,"む距離を設定する（cm） val"]],"start1":4251,"start2":4251,"length1":35,"length2":36},{"diffs":[[0,"\n    //% block=\""],[-1,"前"],[1,"右"],[0,"にすすむ %value\"\n   "]],"start1":4312,"start2":4312,"length1":33,"length2":33},{"diffs":[[0,"export function "],[-1,"forward"],[1,"right"],[0,"(value: number):"]],"start1":4365,"start2":4365,"length1":39,"length2":37},{"diffs":[[0,"dio.sendString(\""],[-1,"forward"],[1,"right"],[0,"=\" + value)\n    "]],"start1":4474,"start2":4474,"length1":39,"length2":37},{"diffs":[[0," }\n\n"],[-1,"    /**\n        * ドローンが三次元で移動します\n        * @param x x -500-500, eg: 0\n        * @param y y -500-500, eg: 0\n        * @param z z -500-500, eg: 0\n        * @param speed speed 10-100, eg: 0\n        */\n    //% block=\"自由飛行 | 前後（前が＋） %x 上下（上が＋） %y 左右（左が＋） %z speed %speed\"\n    //% group=\"上級者向け\"\n    export function xyz(x: number, y: number, z: number, speed: number): void {\n        if (flying == 1 && command_enable == 1) {\n            let sendstring = \"go=\" + x + \"=\" + z + \"=\" + y + \"=\" + speed\n            radio.sendString(sendstring)\n            command_enable = 0\n        }\n    }"],[0,"\n\n\n}"]],"start1":7412,"start2":7412,"length1":587,"length2":8}]}]},{"timestamp":1731574695419,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"block"],[1,"t"],[0,"sprj\"\n}\n"]],"start1":483,"start2":483,"length1":21,"length2":17}]}]},{"timestamp":1731574731626,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"custom.ts","patch":[{"diffs":[[0,"ローンが"],[-1,"下に下"],[1,"上に上が"],[0,"る命令を"]],"start1":2257,"start2":2257,"length1":11,"length2":12},{"diffs":[[0,"m value "],[-1,"下"],[1,"上"],[0,"がる距離を設定す"]],"start1":2311,"start2":2311,"length1":17,"length2":17},{"diffs":[[0,"e 上がる距離を設定する"],[-1,"（cm）"],[1,"(cm)"],[0," value 20-50"]],"start1":2317,"start2":2317,"length1":28,"length2":28},{"diffs":[[0," block=\""],[-1,"下"],[1,"上"],[0,"にいく %val"]],"start1":2370,"start2":2370,"length1":17,"length2":17},{"diffs":[[0,"unction "],[-1,"down"],[1,"up"],[0,"(value: "]],"start1":2422,"start2":2422,"length1":20,"length2":18},{"diffs":[[0,"String(\""],[-1,"down"],[1,"up"],[0,"=\" + val"]],"start1":2528,"start2":2528,"length1":20,"length2":18},{"diffs":[[0,"       }\n    }\n\n"],[-1,"\n"],[0,"    /**\n     * 受"]],"start1":2605,"start2":2605,"length1":33,"length2":32},{"diffs":[[0,"     * 受信機にドローンが"],[-1,"上に上が"],[1,"下に下"],[0,"る命令を送信する．\n     *"]],"start1":2629,"start2":2629,"length1":36,"length2":35},{"diffs":[[0," * @param value "],[-1,"上"],[1,"下"],[0,"がる距離を設定する(cm) va"]],"start1":2686,"start2":2686,"length1":33,"length2":33},{"diffs":[[0,"value 下がる距離を設定する"],[-1,"(cm)"],[1,"（cm）"],[0," value 20-500, e"]],"start1":2696,"start2":2696,"length1":36,"length2":36},{"diffs":[[0,"\n    //% block=\""],[-1,"上"],[1,"下"],[0,"にいく %value\"\n    "]],"start1":2745,"start2":2745,"length1":33,"length2":33},{"diffs":[[0,"export function "],[-1,"up"],[1,"down"],[0,"(value: number):"]],"start1":2797,"start2":2797,"length1":34,"length2":36},{"diffs":[[0,"dio.sendString(\""],[-1,"up"],[1,"down"],[0,"=\" + value)\n    "]],"start1":2905,"start2":2905,"length1":34,"length2":36},{"diffs":[[0,"}\n    }\n"],[-1,"    "],[0,"\n    /**"]],"start1":2999,"start2":2999,"length1":20,"length2":16},{"diffs":[[0," * ドローンが"],[-1,"左"],[1,"前"],[0,"フリップします！"]],"start1":6311,"start2":6311,"length1":17,"length2":17},{"diffs":[[0," block=\""],[-1,"左"],[1,"前"],[0,"フリップする(バ"]],"start1":6349,"start2":6349,"length1":17,"length2":17},{"diffs":[[0,"unction "],[-1,"left"],[1,"forward"],[0,"_flip():"]],"start1":6412,"start2":6412,"length1":20,"length2":23},{"diffs":[[0,"g(\"flip="],[-1,"l"],[1,"f"],[0,"\")\n     "]],"start1":6520,"start2":6520,"length1":17,"length2":17},{"diffs":[[0," * ドローンが"],[-1,"右"],[1,"後ろ"],[0,"フリップします！"]],"start1":6592,"start2":6592,"length1":17,"length2":18},{"diffs":[[0," block=\""],[-1,"右"],[1,"後ろ"],[0,"フリップする(バ"]],"start1":6631,"start2":6631,"length1":17,"length2":18},{"diffs":[[0,"unction "],[-1,"right"],[1,"back"],[0,"_flip():"]],"start1":6695,"start2":6695,"length1":21,"length2":20},{"diffs":[[0,"g(\"flip="],[-1,"r"],[1,"b"],[0,"\")\n     "]],"start1":6800,"start2":6800,"length1":17,"length2":17},{"diffs":[[0,"/**\n     * ドローンが"],[-1,"後ろ"],[1,"左"],[0,"フリップします！おしゃれ！\n  "]],"start1":6864,"start2":6864,"length1":34,"length2":33},{"diffs":[[0,"\n    //% block=\""],[-1,"後ろ"],[1,"左"],[0,"フリップする(バッテリー50以上"]],"start1":6902,"start2":6902,"length1":34,"length2":33},{"diffs":[[0,"export function "],[-1,"back"],[1,"left"],[0,"_flip(): void {\n"]],"start1":6965,"start2":6965,"length1":36,"length2":36},{"diffs":[[0,"endString(\"flip="],[-1,"b"],[1,"l"],[0,"\")\n            c"]],"start1":7070,"start2":7070,"length1":33,"length2":33},{"diffs":[[0,"   /**\n     "],[-1," "],[0,"* ドローンが"],[-1,"前"],[1,"右"],[0,"フリップします！おしゃれ"]],"start1":7139,"start2":7139,"length1":33,"length2":32},{"diffs":[[0,"！おしゃれ！\n     "],[-1," "],[0,"*/\n    //% b"]],"start1":7166,"start2":7166,"length1":25,"length2":24},{"diffs":[[0,"\n    //% block=\""],[-1,"前"],[1,"右"],[0,"フリップする(バッテリー50以上"]],"start1":7180,"start2":7180,"length1":33,"length2":33},{"diffs":[[0,"export function "],[-1,"forward"],[1,"right"],[0,"_flip(): void {\n"]],"start1":7243,"start2":7243,"length1":39,"length2":37},{"diffs":[[0,"endString(\"flip="],[-1,"f"],[1,"r"],[0,"\")\n            c"]],"start1":7349,"start2":7349,"length1":33,"length2":33},{"diffs":[[0,"動します"],[-1,"．20以下の移動は不可,speedは10以上．"],[0,"\n   "]],"start1":7445,"start2":7445,"length1":31,"length2":8},{"diffs":[[0,"up=\""],[-1,"応用"],[1,"上級者向け"],[0,"\"\n  "]],"start1":7695,"start2":7695,"length1":10,"length2":13}]},{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"art\""],[-1," id=\"o6kP8A^hmh4Eg[i{K_]=\""],[0," x=\""]],"start1":100,"start2":100,"length1":34,"length2":8},{"diffs":[[0,"oup\""],[-1," id=\"#aS9;,zS!S~4-~_2[u4D\""],[0,"><va"]],"start1":172,"start2":172,"length1":34,"length2":8},{"diffs":[[0,"ber\""],[-1," id=\"B#Y-6@C[etxkosp9~9uY\""],[0,"><fi"]],"start1":219,"start2":219,"length1":34,"length2":8},{"diffs":[[0,"ver\""],[-1," id=\"JDTN}J0K$9,Z?g0)sg,f\""],[0," x=\""]],"start1":321,"start2":321,"length1":34,"length2":8},{"diffs":[[0,"der\""],[-1," id=\"AILHwX5Q#7UlrDvk1bp=\""],[0,"></b"]],"start1":391,"start2":391,"length1":34,"length2":8}]}]}],"snapshots":[{"timestamp":1731573441510,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"device_forever\" x=\"296\" y=\"-5\"><statement name=\"HANDLER\"><block type=\"Tello_Setorder\"></block></statement></block><block type=\"pxt-on-start\" x=\"41\" y=\"50\"><statement name=\"HANDLER\"><block type=\"Tello_radiosetgroup\"><value name=\"value\"><shadow type=\"math_number\"><field name=\"NUM\">40</field></shadow></value></block></statement></block></xml>","main.ts":"","README.md":"> このページを開く [https://kawanami.github.io/kagabitiot_controller/](https://kawanami.github.io/kagabitiot_controller/)\n\n## 拡張機能として使用\n\nこのリポジトリは、MakeCode で **拡張機能** として追加できます。\n\n* [https://makecode.microbit.org/](https://makecode.microbit.org/) を開く\n* **新しいプロジェクト** をクリックしてください\n* ギアボタンメニューの中にある **拡張機能** をクリックしてください\n* **https://github.com/kawanami/kagabitiot_controller** を検索してインポートします。\n\n## このプロジェクトを編集します\n\nMakeCode でこのリポジトリを編集します。\n\n* [https://makecode.microbit.org/](https://makecode.microbit.org/) を開く\n* **読み込む** をクリックし、 **URLから読み込む...** をクリックしてください\n* **https://github.com/kawanami/kagabitiot_controller** を貼り付けてインポートをクリックしてください\n\n#### メタデータ (検索、レンダリングに使用)\n\n* for PXT/microbit\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n","custom.ts":"enum MyEnumX {   \n    //% block=\"動かさない\"\n    NO_X = (0),\n    //% block=\"前\"\n    FOWARD = (50),\n    //% block=\"後\"\n    BACK = (-50),\n}\n\nenum MyEnumY {\n    //% block=\"動かさない\"\n    NO_Y=(0),\n    //% block=\"上\"\n    UP=(50),\n    //% block=\"下\"\n    DOWN=(-50),\n}\n\nenum MyEnumZ {\n    //% block=\"動かさない\"\n    NO_Z = (0),\n    //% block=\"右\"\n    LIGHT = (-50),\n    //% block=\"左\"\n    LEFT = (50)\n}\n\n/**\n * Custom blocks\n */\n//% weight=0 color=#fc4c02 icon=\"\\u26a1\"\n//% block=\"ドローン\"\"\n\n\nnamespace Tello {\n    /**\n     * 通信グループの設定を行う．受信機と送信機のグループ設定は合わせてね\n     * @param 通信グループの番号 value 1-100, eg: 1\n     */\n    //% block=\"無線グループの設定を行う %value\"\n    //% group=\"設定\"\n    export function radiosetgroup(value: number): void {\n        radio.setGroup(value)\n        radio.setFrequencyBand(value % 84)\n        radio.setTransmitPower(7)\n    }\n\n    /**\n     * スピードの設定を行う、20~50の間で設定する、1につき1cm進む！\n     * @param スピードの設定を行う value 20-50, eg: 10\n     */\n    //% block=\"スピードを設定する(20~50まで:初期値は30) %value\"\n    //% group=\"設定\"\n    export function Setspped(value: number): void {\n        if (value > 50) {\n            value=50\n        }\n        radio.sendString(\"speed=\" + value)\n    }\n\n    /**\n     * 送信間隔の設定を行う、「ずっと」で使う、1000ミリ秒単位で固定\n     */\n    //% block=\"送信間隔を設定する(1000ミリ秒)\"\n    //% group=\"設定\"\n    export function Setorder(): void {\n        if (command_enable == 0) {\n            basic.pause(1000)\n            command_enable = 1\n        }\n    }\n\n    /**\n     * 受信機にドローンが上に上がる命令を送信する．\n     * その時，距離も設定し送信を行う．\n     * @param value 上がる距離を設定する(cm) value 20-500, eg: 20\n     */\n    //% block=\"上がる %value\"\n    //% group=\"基本\"\n    export function up(value: number): void {\n        if (flying == 1 && command_enable == 1) {\n            radio.sendString(\"up=\" + value)\n            flying = 1\n            command_enable = 0\n        }\n    }\n\n    /**\n     * 受信機にドローンが下に下る命令を送信する．\n     * その時，距離も設定し送信を行う．\n     * @param value 下がる距離を設定する（cm） value 20-500, eg: 20\n     */\n    //% block=\"下がる %value\"\n    //% group=\"基本\"\n    export function down(value: number): void {\n        if (flying == 1 && command_enable == 1) {\n            radio.sendString(\"down=\" + value)\n            flying = 1\n            command_enable = 0\n        }\n    }\n\n    /**\n     * 受信機にドローンが前に進む命令を送信する．\n     * その時，距離も設定し送信を行う．\n     * @param value 前に進む距離を設定する（cm） value 20-500, eg: 50\n     */\n    //% block=\"前にすすむ %value\"\n    //% group=\"基本\"\n    export function forward(value: number): void {\n        if (flying == 1 && command_enable == 1) {\n            radio.sendString(\"forward=\" + value)\n            flying = 1\n            command_enable = 0\n        }\n    }\n\n    /**\n     * 受信機にドローンが後ろにさがる命令を送信する．\n     * その時，距離も設定し送信を行う．\n     * @param value 後ろにさがる距離を設定する（cm） value 20-500, eg: 50\n     */\n    //% block=\"後ろにさがる %value\"\n    //% group=\"基本\"\n    export function back(value: number): void {\n        if (flying == 1 && command_enable == 1) {\n            radio.sendString(\"back=\" + value)\n            flying = 1\n            command_enable = 0\n        }\n    }\n\n    /**\n     * 受信機にドローンが左に進む命令を送信する．\n     * その時，距離も設定し送信を行う．\n     * @param value 左にすすむ距離を設定する（cm） value 20-500, eg: 50\n     */\n    //% block=\"左にすすむ %value\"\n    //% group=\"基本\"\n    export function left(value: number): void {\n        if (flying == 1 && command_enable == 1) {\n            radio.sendString(\"left=\" + value)\n            flying = 1\n            command_enable = 0\n        }\n    }\n\n    /**\n     * 受信機にドローンが右に進む命令を送信する．\n     * その時，距離も設定し送信を行う．\n     * @param value 右にすすむ距離を設定する（cm） value 20-500, eg: 50\n     */\n    //% block=\"右にすすむ %value\"\n    //% group=\"基本\"\n    export function right(value: number): void {\n        if (flying == 1 && command_enable == 1) {\n            radio.sendString(\"right=\" + value)\n            flying = 1\n            command_enable = 0\n        }\n    }\n\n    /**\n     * 受信機にドローンが時計回りを行う命令を送信する．\n     * その時，角度を設定し送信を行う．\n     * @param value 時計回りを行う角度を設定する(degrees clockwise) value 1-360, eg: 90\n     */\n    //% block=\"時計まわり %value\"\n    //% group=\"基本\"\n    export function rotate_cw(value: number): void {\n        if (flying == 1 && command_enable == 1) {\n            radio.sendString(\"cw=\" + value)\n            flying = 1\n            command_enable = 0\n        }\n    }\n\n    /**\n     * 受信機にドローンが反時計回りを行う命令を送信する．\n     * その時，角度を設定し送信を行う．\n     * @param value 反時計回りを行う角度を設定する(degrees counterclockwise) value 1-360, eg: 90\n     */\n    //% block=\"反時計まわり %value\"\n    //% group=\"基本\"\n    export function rotate_ccw(value: number): void {\n        if (flying == 1 && command_enable == 1) {\n            radio.sendString(\"ccw=\" + value)\n            flying = 1\n            command_enable = 0\n        }\n    }\n\n    /**\n     * 受信機にドローンが飛行を開始する命令を送信する．\n     */\n    //% block=\"飛行を開始する\"\n    //% group=\"離陸と着陸\"\n    export function takeoff(): void {\n        if (command_enable == 1) {\n            radio.sendString(\"takeoff\")\n            flying = 1\n            command_enable = 0\n        }\n    }\n\n    /**\n     * 受信機にドローンが着地をする命令を送信する．\n    */\n    //% block=\"着地をおこなう\"\n    //% group=\"離陸と着陸\"\n    export function land(): void {\n        if (command_enable == 1) {\n            radio.sendString(\"land\")\n            flying = 0\n            command_enable = 0\n        }\n    }\n\n    /**\n     * ドローンの飛行状態の変数を取得する．\n    */\n    //% block=\"ドローンが飛行をしている\"\n    //% group=\"離陸と着陸\"\n    export function getflying(): boolean {\n        if (flying == 1) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    /**\n     * コントローラー内の変数を確認して飛行を開始するか，着地を行う．\n     */\n    //% block=\"りりく/ちゃくりく\"\n    //% group=\"基本\"\n    export function fly_or_land(): void {\n        if (flying == 0 && command_enable == 1) {\n            radio.sendString(\"takeoff\")\n            flying = 1\n            command_enable = 0\n        } else if (flying == 1 && command_enable == 1) {\n            radio.sendString(\"land\")\n            flying = 0\n            command_enable = 0\n        }\n    }\n\n    /**\n     * カメラを切り替える\n     */\n    //% block=\"カメラを切り替える \"\n    //% group=\"コンテスト用\"\n    export function swiching_camera(): void {\n        if (flying == 1 && command_enable == 1) {\n            if (camera == 1) {\n                radio.sendString(\"downvision 0\")\n                camera = 0\n                command_enable = 0\n            } else {\n                radio.sendString(\"downvision 1\")\n                camera = 1\n                command_enable = 0\n            }\n        }\n    }\n\n    /**\n     * ドローンが前フリップします！おしゃれ！\n     */\n    //% block=\"前フリップする(バッテリー50以上推奨)\"\n    //% group=\"フリップ\"\n    export function forward_flip(): void {\n        if (flying == 1 && command_enable == 1) {\n            radio.sendString(\"flip=f\")\n            command_enable = 0\n        }\n    }\n\n    /**\n     * ドローンが後ろフリップします！おしゃれ！\n     */\n    //% block=\"後ろフリップする(バッテリー50以上推奨)\"\n    //% group=\"フリップ\"\n    export function back_flip(): void {\n        if (flying == 1 && command_enable == 1) {\n            radio.sendString(\"flip=b\")\n            command_enable = 0\n        }\n    }\n\n    /**\n     * ドローンが左フリップします！おしゃれ！\n     */\n    //% block=\"左フリップする(バッテリー50以上推奨)\"\n    //% group=\"フリップ\"\n    export function left_flip(): void {\n        if (flying == 1 && command_enable == 1) {\n            radio.sendString(\"flip=l\")\n            command_enable = 0\n        }\n    }\n\n    /**\n     * ドローンが右フリップします！おしゃれ！\n     */\n    //% block=\"右フリップする(バッテリー50以上推奨)\"\n    //% group=\"フリップ\"\n    export function right_flip(): void {\n        if (flying == 1 && command_enable == 1) {\n            radio.sendString(\"flip=r\")\n            command_enable = 0\n        }\n    }\n\n\n\n\n}\n\nlet flying = 0\nlet command_enable = 1\nlet camera = 0\n","main.py":"Tello.radiosetgroup(40)\n\ndef on_forever():\n    Tello.setorder()\nbasic.forever(on_forever)\n","pxt.json":"{\n    \"name\": \"contest_controller\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"custom.ts\",\n        \"main.py\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"7.0.51\",\n        \"targetId\": \"microbit\"\n    },\n    \"supportedTargets\": [\n        \"microbit\"\n    ],\n    \"preferredEditor\": \"blocksprj\"\n}\n","test.ts":"// テストはここに来ます。このパッケージが拡張機能として使用されるときにはコンパイルされません。\n"}}],"shares":[],"lastSaveTime":1731575005482}